//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/UserInputActionAsset.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @UserInputActionAsset: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @UserInputActionAsset()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""UserInputActionAsset"",
    ""maps"": [
        {
            ""name"": ""XRI Left"",
            ""id"": ""3efb7cb3-f365-44f1-8224-ebab9413c239"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""f50b2c06-8554-47a7-a03d-d7751b55066a"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""2e0f6190-25e5-481b-ac37-dc34eda94588"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Is Tracked"",
                    ""type"": ""Button"",
                    ""id"": ""b67db135-dea6-4bb8-8b13-57a8385db23d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tracking State"",
                    ""type"": ""Value"",
                    ""id"": ""dab00047-bb24-4d10-8071-cce5c660bf3a"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Haptic Device"",
                    ""type"": ""PassThrough"",
                    ""id"": ""eac0af1e-440d-419c-8a5f-68b36c0e11e9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Thumbstick"",
                    ""type"": ""Value"",
                    ""id"": ""c171080c-afa5-4e3e-828f-69671eeab6ba"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Quaternion Fallback"",
                    ""id"": ""9ade40e4-9409-4d27-99ab-83bd14b97643"",
                    ""path"": ""QuaternionFallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""fe3207f8-295b-4085-ae2c-e8a895f1ea24"",
                    ""path"": ""<XRController>{LeftHand}/pointerRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""49d78e4a-8391-4d9b-8121-aceeb73547db"",
                    ""path"": ""<XRController>{LeftHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""75c8b3d5-301c-4dc1-8da1-9a67bb9afbc5"",
                    ""path"": ""<XRHandDevice>{LeftHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Vector 3 Fallback"",
                    ""id"": ""4b60f006-371e-49e0-843b-40d33ef4ed98"",
                    ""path"": ""Vector3Fallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""8264a9a5-1ff8-4e17-9935-867ab23b1011"",
                    ""path"": ""<XRController>{LeftHand}/pointerPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""04b07ffe-b153-4649-88f7-ecbe939efefb"",
                    ""path"": ""<XRController>{LeftHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""3ab7ca3e-c5aa-4cf5-8ac8-b40084406bd8"",
                    ""path"": ""<XRHandDevice>{LeftHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""302d4420-37ed-488f-8617-e0ba62b9e1b6"",
                    ""path"": ""<XRController>{LeftHand}/*"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Haptic Device"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba5bdc54-2d5c-4106-9910-f651cfc84a37"",
                    ""path"": ""<XRController>{LeftHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f014d5f-4c7e-4472-87b2-6a3e3545bdd3"",
                    ""path"": ""<XRHandDevice>{LeftHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b99a7a6a-3c9b-4cfe-bf0a-bf943d5576fa"",
                    ""path"": ""<XRController>{LeftHand}/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""58d8b1e5-97bc-4ea4-8bb0-98008d8fbd9c"",
                    ""path"": ""<XRHandDevice>{LeftHand}/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e006e061-7f1e-427d-be34-3231cce57bf0"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thumbstick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""XRI Right"",
            ""id"": ""5a5b6094-07fd-4c7c-b178-97ab233208d6"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""39b5e350-e8e9-41d6-93e9-0c035f6b5ae4"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""d558032c-e165-4c25-81c7-c2699cff53af"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Is Tracked"",
                    ""type"": ""Button"",
                    ""id"": ""b25bdfbb-480a-47d5-b71c-ac5ec79e1c94"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tracking State"",
                    ""type"": ""Value"",
                    ""id"": ""ce96c2aa-08db-4857-9bc9-634965f1080d"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Haptic Device"",
                    ""type"": ""PassThrough"",
                    ""id"": ""351878a9-6e2f-4318-b05b-99b91df23b11"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Thumbstick"",
                    ""type"": ""Value"",
                    ""id"": ""f17421b5-d551-411c-a2c4-7e95f13cb651"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Quaternion Fallback"",
                    ""id"": ""7b8fd0a8-3373-4c02-9600-b433b448f1ba"",
                    ""path"": ""QuaternionFallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""8aca9e6b-7996-462f-a334-f33e51d592f5"",
                    ""path"": ""<XRController>{RightHand}/pointerRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""0eebbb1f-df35-4377-a6b9-ad75197d0e71"",
                    ""path"": ""<XRController>{RightHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""4a0e02a0-569a-4a09-9e3b-a39d624a57c8"",
                    ""path"": ""<XRHandDevice>{RightHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Vector 3 Fallback"",
                    ""id"": ""b6967dc4-9e60-4e49-a44b-1c3141fd3586"",
                    ""path"": ""Vector3Fallback"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""first"",
                    ""id"": ""b5da9a0a-e295-46f2-be38-8da67bcd2f07"",
                    ""path"": ""<XRController>{RightHand}/pointerPosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""second"",
                    ""id"": ""0a33ecf7-d0f2-4e45-b4b9-4d01d2d985b9"",
                    ""path"": ""<XRController>{RightHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""third"",
                    ""id"": ""80dfa370-5ecb-48c0-b785-65ebb395cba7"",
                    ""path"": ""<XRHandDevice>{RightHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9c729492-f795-4a34-96ba-088499df7f17"",
                    ""path"": ""<XRController>{RightHand}/*"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Haptic Device"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0933b9ec-f6e9-4ab2-bd21-ce8a68c97c05"",
                    ""path"": ""<XRController>{RightHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f2f8c3f7-8ed7-49dd-b418-d1250fb65640"",
                    ""path"": ""<XRHandDevice>{RightHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a9ec537-a048-4ec7-886f-a8c787f207d1"",
                    ""path"": ""<XRController>{RightHand}/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b1950a2f-f519-455d-ab06-894e440b5871"",
                    ""path"": ""<XRHandDevice>{RightHand}/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d582280-8ffc-4b92-837d-1003b25a3d44"",
                    ""path"": ""<XRController>{RightHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Thumbstick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""XRI Left Interaction"",
            ""id"": ""68afc122-134a-499f-856d-016ccb9c536d"",
            ""actions"": [
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""9931fcf0-6722-4140-9006-7415ebded3d7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select Value"",
                    ""type"": ""Value"",
                    ""id"": ""5f4cf7cd-ec90-4db2-9c35-803fe36eedb8"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Activate"",
                    ""type"": ""Button"",
                    ""id"": ""26890392-76d1-47c8-9d42-11ba6ac50313"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Activate Value"",
                    ""type"": ""Value"",
                    ""id"": ""514206f0-6a0a-4081-acb5-8d873ade4c34"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UI Press"",
                    ""type"": ""Button"",
                    ""id"": ""07c25ba8-dda3-412a-9711-5b550803770e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UI Press Value"",
                    ""type"": ""Value"",
                    ""id"": ""4be0985c-8a77-474f-b49d-001fe49e51e2"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UI Scroll"",
                    ""type"": ""Value"",
                    ""id"": ""3067c1f7-509c-4d88-8c9f-a96ae89881ee"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""InvertVector2(invertY=false)"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9d62efc2-ddd9-4fcd-b43a-2e48ae40ca7b"",
                    ""path"": ""<XRController>{LeftHand}/{GripButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef6a59c9-0e04-4616-81a5-d0bb34af940b"",
                    ""path"": ""<MetaAimHand>{LeftHand}/indexPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e4261e87-5e76-4dca-9268-a1eb7dd3c5b9"",
                    ""path"": ""<HandInteraction>{LeftHand}/graspFirm"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""baaabc1e-782a-4bf0-9b06-c9939ec03d03"",
                    ""path"": ""<HandInteraction>{LeftHand}/pinchTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""edb6361d-c870-4fe8-a178-650111f24d5e"",
                    ""path"": ""<HoloLensHand>{LeftHand}/squeezePressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""685aaf97-9cc9-4938-8d52-dbf86545bd5c"",
                    ""path"": ""<XRController>{LeftHand}/{Grip}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3edb1823-20ec-4bc3-9932-8c5f6bc079bb"",
                    ""path"": ""<MetaAimHand>{LeftHand}/pinchStrengthIndex"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7bc7fefa-a93e-432d-a816-2fe79b796caf"",
                    ""path"": ""<HandInteraction>{LeftHand}/graspValue"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2bd4d237-dec3-4aa8-99bb-6ffb0af3a1cf"",
                    ""path"": ""<HandInteraction>{LeftHand}/pinchValue"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5ce8ae8-1730-45b2-9fe9-7f1df9943c7d"",
                    ""path"": ""<HoloLensHand>{LeftHand}/squeeze"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0718d43-818f-4fd2-8037-9517ff401615"",
                    ""path"": ""<XRController>{LeftHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Activate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9804d9bc-c463-43ac-8da4-cd02fe7ffbf5"",
                    ""path"": ""<XRController>{LeftHand}/{Trigger}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Activate Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df238dbc-9b5e-420a-b912-d002b1f3d236"",
                    ""path"": ""<XRController>{LeftHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UI Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc718c2f-62b6-4768-a7b9-8230e475e443"",
                    ""path"": ""<HandInteraction>{LeftHand}/pointerActivated"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UI Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6b574ed-c597-4c71-a2d0-c1661dd08358"",
                    ""path"": ""<HoloLensHand>{LeftHand}/selectPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UI Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""97d58b38-5a0c-4baa-ac58-7d2cc0ae8612"",
                    ""path"": ""<XRController>{LeftHand}/{Trigger}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UI Press Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9755b977-23a0-4fab-a816-09fd3fb3e169"",
                    ""path"": ""<HandInteraction>{LeftHand}/pointerActivateValue"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UI Press Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7aea622d-6188-43bc-b25f-c493da98c8ad"",
                    ""path"": ""<HoloLensHand>{LeftHand}/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UI Press Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dbd6616a-27a3-4534-b214-8fc5c838e30c"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UI Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""XRI Right Interaction"",
            ""id"": ""81f618a3-1df7-4596-b8d2-60b3e5a04043"",
            ""actions"": [
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""bb6cb595-6bea-45be-9e11-018efa9a68b8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Select Value"",
                    ""type"": ""Value"",
                    ""id"": ""e2e51e10-1115-425a-8ec3-6fe59ab09141"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Activate"",
                    ""type"": ""Button"",
                    ""id"": ""819a798e-5d3e-45c6-96ee-605d6ba3e339"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Activate Value"",
                    ""type"": ""Value"",
                    ""id"": ""d4d6ff46-982f-414b-a1df-5627d87331f9"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UI Press"",
                    ""type"": ""Button"",
                    ""id"": ""68411ae6-89e6-40ca-bb10-ae60f7a1188f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UI Press Value"",
                    ""type"": ""Value"",
                    ""id"": ""a37a17d9-6ca2-41f1-bbe8-73057dbf1fc9"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""UI Scroll"",
                    ""type"": ""Value"",
                    ""id"": ""7b672fe8-4737-4426-8a3e-aef5c650edf3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""InvertVector2(invertY=false)"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""bab118e7-c65c-4bd4-b282-9291605266e7"",
                    ""path"": ""<XRController>{RightHand}/{GripButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ffffa8a-b408-483a-8c6d-2b3d26f5e1ae"",
                    ""path"": ""<MetaAimHand>{RightHand}/indexPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""af92b4f1-46c0-498b-94dd-201aab404bab"",
                    ""path"": ""<HandInteraction>{RightHand}/graspFirm"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d760b1ae-6745-4d12-aeee-210ce9ee2665"",
                    ""path"": ""<HandInteraction>{RightHand}/pinchTouched"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a466608d-1782-4acd-8c66-5cd10d2907e5"",
                    ""path"": ""<HoloLensHand>{RightHand}/squeezePressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aef99475-831f-438b-a8ea-1ae0c2759856"",
                    ""path"": ""<XRController>{RightHand}/{Grip}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a477b20-4e39-4487-b3a2-8747a519732d"",
                    ""path"": ""<MetaAimHand>{RightHand}/pinchStrengthIndex"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8fcd035f-8e3f-4d75-bf2c-8d083811c4ab"",
                    ""path"": ""<HandInteraction>{RightHand}/graspValue"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f4856fe-6204-4a90-94eb-0658d8dd3efc"",
                    ""path"": ""<HandInteraction>{RightHand}/pinchValue"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d38d65a1-d3c5-4849-b056-a3378a99d3dc"",
                    ""path"": ""<HoloLensHand>{RightHand}/squeeze"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""af20a738-d259-4441-b532-ac8de57b4ba6"",
                    ""path"": ""<XRController>{RightHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Activate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a085879-db6f-4265-9631-b83b0a8f6522"",
                    ""path"": ""<XRController>{RightHand}/{Trigger}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Activate Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b2348439-77df-4a3f-81a2-ed1712d7b07d"",
                    ""path"": ""<XRController>{RightHand}/{TriggerButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UI Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1889916a-34df-406b-a11e-cf1764c708cc"",
                    ""path"": ""<MetaAimHand>{RightHand}/indexPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UI Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""233bb0f9-01a3-4ac1-a412-50489e39c3cc"",
                    ""path"": ""<HandInteraction>{RightHand}/pointerActivated"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UI Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2bbbdc8c-818e-406b-a27d-1e53b21325c9"",
                    ""path"": ""<HoloLensHand>{RightHand}/selectPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UI Press"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cf2f18b3-221a-42e5-a199-2f4c35cd7702"",
                    ""path"": ""<XRController>{RightHand}/{Trigger}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UI Press Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""52caddb5-3f87-4bff-82a2-e0a979de7e5c"",
                    ""path"": ""<MetaAimHand>{RightHand}/pinchStrengthIndex"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UI Press Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a0e894e5-83f2-45ec-992b-1829fad032a6"",
                    ""path"": ""<HandInteraction>{RightHand}/pointerActivateValue"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UI Press Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e70060ec-daec-47cd-b2f6-45bf265d3a3d"",
                    ""path"": ""<HoloLensHand>{RightHand}/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UI Press Value"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f2e809a1-fd9b-4f11-81e8-b6124bb53460"",
                    ""path"": ""<XRController>{RightHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UI Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""XRI Head"",
            ""id"": ""7c135dc5-bdc3-449b-a705-776f3e632e3c"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""9f232cdc-3202-4c87-a945-c17685f60a45"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""989c4c08-61e3-4d70-8af6-7a6a30d1ba43"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Is Tracked"",
                    ""type"": ""Button"",
                    ""id"": ""1327e754-ce25-402f-8714-e6268b822d12"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tracking State"",
                    ""type"": ""Value"",
                    ""id"": ""548b63e3-5357-4c01-b790-bf14f80c5e37"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6d39bbed-5a0b-4495-9962-3c8da7fbba33"",
                    ""path"": ""<XRHMD>/centerEyePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cfe19b31-99fa-4155-aee3-2868e16f3dd8"",
                    ""path"": ""<HandheldARInputDevice>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cd3a272f-032b-46e8-a749-d15cdc0e6780"",
                    ""path"": ""<XRHMD>/centerEyeRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b36b1cbb-8580-4244-9c29-72de5eedd53f"",
                    ""path"": ""<HandheldARInputDevice>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d57ff7d3-6a4e-413f-89a6-a83a3792a451"",
                    ""path"": ""<XRHMD>/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c622b57a-27eb-4795-9bd0-52a0b0a23634"",
                    ""path"": ""<XRHMD>/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Ghost"",
            ""id"": ""17b253e8-d006-46eb-9112-24f43a1e2b73"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""26a22a94-5472-4910-b32b-f09cc8570d53"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""a518d036-2fd7-4e24-a2e1-268e1f5a50c3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftClick"",
                    ""type"": ""Button"",
                    ""id"": ""59ebe59a-7a84-4826-bfc2-b1d06b66743b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""Button"",
                    ""id"": ""96c65084-c109-4576-b4a8-2d9839c71a32"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenClose"",
                    ""type"": ""Button"",
                    ""id"": ""ecbc8ac9-1997-427a-aa0b-82d58f46c409"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SetHeight"",
                    ""type"": ""Button"",
                    ""id"": ""989a711e-763a-41bd-ab52-ab1e33ba7e7f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotate"",
                    ""type"": ""Value"",
                    ""id"": ""bb762c85-7c05-40a2-a792-bdecce404bf9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5f5dd0fc-8b46-4e90-8180-e1f99faf2072"",
                    ""path"": ""<XRController>{LeftHand}/{Primary2DAxis}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""3df4ef63-6fd3-4041-a47e-df55baa887c0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c6e7d006-17e2-4e1b-88b7-dac12acce441"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7e1852a2-f19e-4a1a-a414-83d93baf7ad4"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f25acf54-6704-4628-ad87-032bcbac472b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d4f8607f-ab96-462c-b47e-1c56084694b1"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8652fd1c-caac-42df-bed3-f5dd44648fa9"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""31df51f3-b5d7-4bf5-b2c6-e7d5bb42baac"",
                    ""path"": ""<XRController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1bd7ed7-450c-494d-a5cb-4f346fc1919c"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e45d3516-d5d7-4b79-8036-d98091ab4e5f"",
                    ""path"": ""<XRController>{RightHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dbf71f6b-f29b-4626-bb3a-e67ed38676f6"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenClose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f96a0127-9cbb-476a-9657-55cca302b5b2"",
                    ""path"": ""<XRController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SetHeight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""43b59e78-6033-4a09-8b3e-91233cd013f9"",
                    ""path"": ""<XRController>{RightHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""716abc31-1d4b-4fbc-b777-cfae7c7d89f4"",
            ""actions"": [
                {
                    ""name"": ""EnableDisable"",
                    ""type"": ""Button"",
                    ""id"": ""0b09336e-c11c-4281-b8ad-1bd57ffa0153"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7597b5ca-794e-4c66-a409-b60081b5f71e"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EnableDisable"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23922ae1-700f-4318-a0ff-8fde5956ed8a"",
                    ""path"": ""<XRController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EnableDisable"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // XRI Left
        m_XRILeft = asset.FindActionMap("XRI Left", throwIfNotFound: true);
        m_XRILeft_Position = m_XRILeft.FindAction("Position", throwIfNotFound: true);
        m_XRILeft_Rotation = m_XRILeft.FindAction("Rotation", throwIfNotFound: true);
        m_XRILeft_IsTracked = m_XRILeft.FindAction("Is Tracked", throwIfNotFound: true);
        m_XRILeft_TrackingState = m_XRILeft.FindAction("Tracking State", throwIfNotFound: true);
        m_XRILeft_HapticDevice = m_XRILeft.FindAction("Haptic Device", throwIfNotFound: true);
        m_XRILeft_Thumbstick = m_XRILeft.FindAction("Thumbstick", throwIfNotFound: true);
        // XRI Right
        m_XRIRight = asset.FindActionMap("XRI Right", throwIfNotFound: true);
        m_XRIRight_Position = m_XRIRight.FindAction("Position", throwIfNotFound: true);
        m_XRIRight_Rotation = m_XRIRight.FindAction("Rotation", throwIfNotFound: true);
        m_XRIRight_IsTracked = m_XRIRight.FindAction("Is Tracked", throwIfNotFound: true);
        m_XRIRight_TrackingState = m_XRIRight.FindAction("Tracking State", throwIfNotFound: true);
        m_XRIRight_HapticDevice = m_XRIRight.FindAction("Haptic Device", throwIfNotFound: true);
        m_XRIRight_Thumbstick = m_XRIRight.FindAction("Thumbstick", throwIfNotFound: true);
        // XRI Left Interaction
        m_XRILeftInteraction = asset.FindActionMap("XRI Left Interaction", throwIfNotFound: true);
        m_XRILeftInteraction_Select = m_XRILeftInteraction.FindAction("Select", throwIfNotFound: true);
        m_XRILeftInteraction_SelectValue = m_XRILeftInteraction.FindAction("Select Value", throwIfNotFound: true);
        m_XRILeftInteraction_Activate = m_XRILeftInteraction.FindAction("Activate", throwIfNotFound: true);
        m_XRILeftInteraction_ActivateValue = m_XRILeftInteraction.FindAction("Activate Value", throwIfNotFound: true);
        m_XRILeftInteraction_UIPress = m_XRILeftInteraction.FindAction("UI Press", throwIfNotFound: true);
        m_XRILeftInteraction_UIPressValue = m_XRILeftInteraction.FindAction("UI Press Value", throwIfNotFound: true);
        m_XRILeftInteraction_UIScroll = m_XRILeftInteraction.FindAction("UI Scroll", throwIfNotFound: true);
        // XRI Right Interaction
        m_XRIRightInteraction = asset.FindActionMap("XRI Right Interaction", throwIfNotFound: true);
        m_XRIRightInteraction_Select = m_XRIRightInteraction.FindAction("Select", throwIfNotFound: true);
        m_XRIRightInteraction_SelectValue = m_XRIRightInteraction.FindAction("Select Value", throwIfNotFound: true);
        m_XRIRightInteraction_Activate = m_XRIRightInteraction.FindAction("Activate", throwIfNotFound: true);
        m_XRIRightInteraction_ActivateValue = m_XRIRightInteraction.FindAction("Activate Value", throwIfNotFound: true);
        m_XRIRightInteraction_UIPress = m_XRIRightInteraction.FindAction("UI Press", throwIfNotFound: true);
        m_XRIRightInteraction_UIPressValue = m_XRIRightInteraction.FindAction("UI Press Value", throwIfNotFound: true);
        m_XRIRightInteraction_UIScroll = m_XRIRightInteraction.FindAction("UI Scroll", throwIfNotFound: true);
        // XRI Head
        m_XRIHead = asset.FindActionMap("XRI Head", throwIfNotFound: true);
        m_XRIHead_Position = m_XRIHead.FindAction("Position", throwIfNotFound: true);
        m_XRIHead_Rotation = m_XRIHead.FindAction("Rotation", throwIfNotFound: true);
        m_XRIHead_IsTracked = m_XRIHead.FindAction("Is Tracked", throwIfNotFound: true);
        m_XRIHead_TrackingState = m_XRIHead.FindAction("Tracking State", throwIfNotFound: true);
        // Ghost
        m_Ghost = asset.FindActionMap("Ghost", throwIfNotFound: true);
        m_Ghost_Move = m_Ghost.FindAction("Move", throwIfNotFound: true);
        m_Ghost_Look = m_Ghost.FindAction("Look", throwIfNotFound: true);
        m_Ghost_LeftClick = m_Ghost.FindAction("LeftClick", throwIfNotFound: true);
        m_Ghost_RightClick = m_Ghost.FindAction("RightClick", throwIfNotFound: true);
        m_Ghost_OpenClose = m_Ghost.FindAction("OpenClose", throwIfNotFound: true);
        m_Ghost_SetHeight = m_Ghost.FindAction("SetHeight", throwIfNotFound: true);
        m_Ghost_Rotate = m_Ghost.FindAction("Rotate", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_EnableDisable = m_UI.FindAction("EnableDisable", throwIfNotFound: true);
    }

    ~@UserInputActionAsset()
    {
        UnityEngine.Debug.Assert(!m_XRILeft.enabled, "This will cause a leak and performance issues, UserInputActionAsset.XRILeft.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_XRIRight.enabled, "This will cause a leak and performance issues, UserInputActionAsset.XRIRight.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_XRILeftInteraction.enabled, "This will cause a leak and performance issues, UserInputActionAsset.XRILeftInteraction.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_XRIRightInteraction.enabled, "This will cause a leak and performance issues, UserInputActionAsset.XRIRightInteraction.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_XRIHead.enabled, "This will cause a leak and performance issues, UserInputActionAsset.XRIHead.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_Ghost.enabled, "This will cause a leak and performance issues, UserInputActionAsset.Ghost.Disable() has not been called.");
        UnityEngine.Debug.Assert(!m_UI.enabled, "This will cause a leak and performance issues, UserInputActionAsset.UI.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // XRI Left
    private readonly InputActionMap m_XRILeft;
    private List<IXRILeftActions> m_XRILeftActionsCallbackInterfaces = new List<IXRILeftActions>();
    private readonly InputAction m_XRILeft_Position;
    private readonly InputAction m_XRILeft_Rotation;
    private readonly InputAction m_XRILeft_IsTracked;
    private readonly InputAction m_XRILeft_TrackingState;
    private readonly InputAction m_XRILeft_HapticDevice;
    private readonly InputAction m_XRILeft_Thumbstick;
    public struct XRILeftActions
    {
        private @UserInputActionAsset m_Wrapper;
        public XRILeftActions(@UserInputActionAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @Position => m_Wrapper.m_XRILeft_Position;
        public InputAction @Rotation => m_Wrapper.m_XRILeft_Rotation;
        public InputAction @IsTracked => m_Wrapper.m_XRILeft_IsTracked;
        public InputAction @TrackingState => m_Wrapper.m_XRILeft_TrackingState;
        public InputAction @HapticDevice => m_Wrapper.m_XRILeft_HapticDevice;
        public InputAction @Thumbstick => m_Wrapper.m_XRILeft_Thumbstick;
        public InputActionMap Get() { return m_Wrapper.m_XRILeft; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(XRILeftActions set) { return set.Get(); }
        public void AddCallbacks(IXRILeftActions instance)
        {
            if (instance == null || m_Wrapper.m_XRILeftActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_XRILeftActionsCallbackInterfaces.Add(instance);
            @Position.started += instance.OnPosition;
            @Position.performed += instance.OnPosition;
            @Position.canceled += instance.OnPosition;
            @Rotation.started += instance.OnRotation;
            @Rotation.performed += instance.OnRotation;
            @Rotation.canceled += instance.OnRotation;
            @IsTracked.started += instance.OnIsTracked;
            @IsTracked.performed += instance.OnIsTracked;
            @IsTracked.canceled += instance.OnIsTracked;
            @TrackingState.started += instance.OnTrackingState;
            @TrackingState.performed += instance.OnTrackingState;
            @TrackingState.canceled += instance.OnTrackingState;
            @HapticDevice.started += instance.OnHapticDevice;
            @HapticDevice.performed += instance.OnHapticDevice;
            @HapticDevice.canceled += instance.OnHapticDevice;
            @Thumbstick.started += instance.OnThumbstick;
            @Thumbstick.performed += instance.OnThumbstick;
            @Thumbstick.canceled += instance.OnThumbstick;
        }

        private void UnregisterCallbacks(IXRILeftActions instance)
        {
            @Position.started -= instance.OnPosition;
            @Position.performed -= instance.OnPosition;
            @Position.canceled -= instance.OnPosition;
            @Rotation.started -= instance.OnRotation;
            @Rotation.performed -= instance.OnRotation;
            @Rotation.canceled -= instance.OnRotation;
            @IsTracked.started -= instance.OnIsTracked;
            @IsTracked.performed -= instance.OnIsTracked;
            @IsTracked.canceled -= instance.OnIsTracked;
            @TrackingState.started -= instance.OnTrackingState;
            @TrackingState.performed -= instance.OnTrackingState;
            @TrackingState.canceled -= instance.OnTrackingState;
            @HapticDevice.started -= instance.OnHapticDevice;
            @HapticDevice.performed -= instance.OnHapticDevice;
            @HapticDevice.canceled -= instance.OnHapticDevice;
            @Thumbstick.started -= instance.OnThumbstick;
            @Thumbstick.performed -= instance.OnThumbstick;
            @Thumbstick.canceled -= instance.OnThumbstick;
        }

        public void RemoveCallbacks(IXRILeftActions instance)
        {
            if (m_Wrapper.m_XRILeftActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IXRILeftActions instance)
        {
            foreach (var item in m_Wrapper.m_XRILeftActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_XRILeftActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public XRILeftActions @XRILeft => new XRILeftActions(this);

    // XRI Right
    private readonly InputActionMap m_XRIRight;
    private List<IXRIRightActions> m_XRIRightActionsCallbackInterfaces = new List<IXRIRightActions>();
    private readonly InputAction m_XRIRight_Position;
    private readonly InputAction m_XRIRight_Rotation;
    private readonly InputAction m_XRIRight_IsTracked;
    private readonly InputAction m_XRIRight_TrackingState;
    private readonly InputAction m_XRIRight_HapticDevice;
    private readonly InputAction m_XRIRight_Thumbstick;
    public struct XRIRightActions
    {
        private @UserInputActionAsset m_Wrapper;
        public XRIRightActions(@UserInputActionAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @Position => m_Wrapper.m_XRIRight_Position;
        public InputAction @Rotation => m_Wrapper.m_XRIRight_Rotation;
        public InputAction @IsTracked => m_Wrapper.m_XRIRight_IsTracked;
        public InputAction @TrackingState => m_Wrapper.m_XRIRight_TrackingState;
        public InputAction @HapticDevice => m_Wrapper.m_XRIRight_HapticDevice;
        public InputAction @Thumbstick => m_Wrapper.m_XRIRight_Thumbstick;
        public InputActionMap Get() { return m_Wrapper.m_XRIRight; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(XRIRightActions set) { return set.Get(); }
        public void AddCallbacks(IXRIRightActions instance)
        {
            if (instance == null || m_Wrapper.m_XRIRightActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_XRIRightActionsCallbackInterfaces.Add(instance);
            @Position.started += instance.OnPosition;
            @Position.performed += instance.OnPosition;
            @Position.canceled += instance.OnPosition;
            @Rotation.started += instance.OnRotation;
            @Rotation.performed += instance.OnRotation;
            @Rotation.canceled += instance.OnRotation;
            @IsTracked.started += instance.OnIsTracked;
            @IsTracked.performed += instance.OnIsTracked;
            @IsTracked.canceled += instance.OnIsTracked;
            @TrackingState.started += instance.OnTrackingState;
            @TrackingState.performed += instance.OnTrackingState;
            @TrackingState.canceled += instance.OnTrackingState;
            @HapticDevice.started += instance.OnHapticDevice;
            @HapticDevice.performed += instance.OnHapticDevice;
            @HapticDevice.canceled += instance.OnHapticDevice;
            @Thumbstick.started += instance.OnThumbstick;
            @Thumbstick.performed += instance.OnThumbstick;
            @Thumbstick.canceled += instance.OnThumbstick;
        }

        private void UnregisterCallbacks(IXRIRightActions instance)
        {
            @Position.started -= instance.OnPosition;
            @Position.performed -= instance.OnPosition;
            @Position.canceled -= instance.OnPosition;
            @Rotation.started -= instance.OnRotation;
            @Rotation.performed -= instance.OnRotation;
            @Rotation.canceled -= instance.OnRotation;
            @IsTracked.started -= instance.OnIsTracked;
            @IsTracked.performed -= instance.OnIsTracked;
            @IsTracked.canceled -= instance.OnIsTracked;
            @TrackingState.started -= instance.OnTrackingState;
            @TrackingState.performed -= instance.OnTrackingState;
            @TrackingState.canceled -= instance.OnTrackingState;
            @HapticDevice.started -= instance.OnHapticDevice;
            @HapticDevice.performed -= instance.OnHapticDevice;
            @HapticDevice.canceled -= instance.OnHapticDevice;
            @Thumbstick.started -= instance.OnThumbstick;
            @Thumbstick.performed -= instance.OnThumbstick;
            @Thumbstick.canceled -= instance.OnThumbstick;
        }

        public void RemoveCallbacks(IXRIRightActions instance)
        {
            if (m_Wrapper.m_XRIRightActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IXRIRightActions instance)
        {
            foreach (var item in m_Wrapper.m_XRIRightActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_XRIRightActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public XRIRightActions @XRIRight => new XRIRightActions(this);

    // XRI Left Interaction
    private readonly InputActionMap m_XRILeftInteraction;
    private List<IXRILeftInteractionActions> m_XRILeftInteractionActionsCallbackInterfaces = new List<IXRILeftInteractionActions>();
    private readonly InputAction m_XRILeftInteraction_Select;
    private readonly InputAction m_XRILeftInteraction_SelectValue;
    private readonly InputAction m_XRILeftInteraction_Activate;
    private readonly InputAction m_XRILeftInteraction_ActivateValue;
    private readonly InputAction m_XRILeftInteraction_UIPress;
    private readonly InputAction m_XRILeftInteraction_UIPressValue;
    private readonly InputAction m_XRILeftInteraction_UIScroll;
    public struct XRILeftInteractionActions
    {
        private @UserInputActionAsset m_Wrapper;
        public XRILeftInteractionActions(@UserInputActionAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @Select => m_Wrapper.m_XRILeftInteraction_Select;
        public InputAction @SelectValue => m_Wrapper.m_XRILeftInteraction_SelectValue;
        public InputAction @Activate => m_Wrapper.m_XRILeftInteraction_Activate;
        public InputAction @ActivateValue => m_Wrapper.m_XRILeftInteraction_ActivateValue;
        public InputAction @UIPress => m_Wrapper.m_XRILeftInteraction_UIPress;
        public InputAction @UIPressValue => m_Wrapper.m_XRILeftInteraction_UIPressValue;
        public InputAction @UIScroll => m_Wrapper.m_XRILeftInteraction_UIScroll;
        public InputActionMap Get() { return m_Wrapper.m_XRILeftInteraction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(XRILeftInteractionActions set) { return set.Get(); }
        public void AddCallbacks(IXRILeftInteractionActions instance)
        {
            if (instance == null || m_Wrapper.m_XRILeftInteractionActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_XRILeftInteractionActionsCallbackInterfaces.Add(instance);
            @Select.started += instance.OnSelect;
            @Select.performed += instance.OnSelect;
            @Select.canceled += instance.OnSelect;
            @SelectValue.started += instance.OnSelectValue;
            @SelectValue.performed += instance.OnSelectValue;
            @SelectValue.canceled += instance.OnSelectValue;
            @Activate.started += instance.OnActivate;
            @Activate.performed += instance.OnActivate;
            @Activate.canceled += instance.OnActivate;
            @ActivateValue.started += instance.OnActivateValue;
            @ActivateValue.performed += instance.OnActivateValue;
            @ActivateValue.canceled += instance.OnActivateValue;
            @UIPress.started += instance.OnUIPress;
            @UIPress.performed += instance.OnUIPress;
            @UIPress.canceled += instance.OnUIPress;
            @UIPressValue.started += instance.OnUIPressValue;
            @UIPressValue.performed += instance.OnUIPressValue;
            @UIPressValue.canceled += instance.OnUIPressValue;
            @UIScroll.started += instance.OnUIScroll;
            @UIScroll.performed += instance.OnUIScroll;
            @UIScroll.canceled += instance.OnUIScroll;
        }

        private void UnregisterCallbacks(IXRILeftInteractionActions instance)
        {
            @Select.started -= instance.OnSelect;
            @Select.performed -= instance.OnSelect;
            @Select.canceled -= instance.OnSelect;
            @SelectValue.started -= instance.OnSelectValue;
            @SelectValue.performed -= instance.OnSelectValue;
            @SelectValue.canceled -= instance.OnSelectValue;
            @Activate.started -= instance.OnActivate;
            @Activate.performed -= instance.OnActivate;
            @Activate.canceled -= instance.OnActivate;
            @ActivateValue.started -= instance.OnActivateValue;
            @ActivateValue.performed -= instance.OnActivateValue;
            @ActivateValue.canceled -= instance.OnActivateValue;
            @UIPress.started -= instance.OnUIPress;
            @UIPress.performed -= instance.OnUIPress;
            @UIPress.canceled -= instance.OnUIPress;
            @UIPressValue.started -= instance.OnUIPressValue;
            @UIPressValue.performed -= instance.OnUIPressValue;
            @UIPressValue.canceled -= instance.OnUIPressValue;
            @UIScroll.started -= instance.OnUIScroll;
            @UIScroll.performed -= instance.OnUIScroll;
            @UIScroll.canceled -= instance.OnUIScroll;
        }

        public void RemoveCallbacks(IXRILeftInteractionActions instance)
        {
            if (m_Wrapper.m_XRILeftInteractionActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IXRILeftInteractionActions instance)
        {
            foreach (var item in m_Wrapper.m_XRILeftInteractionActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_XRILeftInteractionActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public XRILeftInteractionActions @XRILeftInteraction => new XRILeftInteractionActions(this);

    // XRI Right Interaction
    private readonly InputActionMap m_XRIRightInteraction;
    private List<IXRIRightInteractionActions> m_XRIRightInteractionActionsCallbackInterfaces = new List<IXRIRightInteractionActions>();
    private readonly InputAction m_XRIRightInteraction_Select;
    private readonly InputAction m_XRIRightInteraction_SelectValue;
    private readonly InputAction m_XRIRightInteraction_Activate;
    private readonly InputAction m_XRIRightInteraction_ActivateValue;
    private readonly InputAction m_XRIRightInteraction_UIPress;
    private readonly InputAction m_XRIRightInteraction_UIPressValue;
    private readonly InputAction m_XRIRightInteraction_UIScroll;
    public struct XRIRightInteractionActions
    {
        private @UserInputActionAsset m_Wrapper;
        public XRIRightInteractionActions(@UserInputActionAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @Select => m_Wrapper.m_XRIRightInteraction_Select;
        public InputAction @SelectValue => m_Wrapper.m_XRIRightInteraction_SelectValue;
        public InputAction @Activate => m_Wrapper.m_XRIRightInteraction_Activate;
        public InputAction @ActivateValue => m_Wrapper.m_XRIRightInteraction_ActivateValue;
        public InputAction @UIPress => m_Wrapper.m_XRIRightInteraction_UIPress;
        public InputAction @UIPressValue => m_Wrapper.m_XRIRightInteraction_UIPressValue;
        public InputAction @UIScroll => m_Wrapper.m_XRIRightInteraction_UIScroll;
        public InputActionMap Get() { return m_Wrapper.m_XRIRightInteraction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(XRIRightInteractionActions set) { return set.Get(); }
        public void AddCallbacks(IXRIRightInteractionActions instance)
        {
            if (instance == null || m_Wrapper.m_XRIRightInteractionActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_XRIRightInteractionActionsCallbackInterfaces.Add(instance);
            @Select.started += instance.OnSelect;
            @Select.performed += instance.OnSelect;
            @Select.canceled += instance.OnSelect;
            @SelectValue.started += instance.OnSelectValue;
            @SelectValue.performed += instance.OnSelectValue;
            @SelectValue.canceled += instance.OnSelectValue;
            @Activate.started += instance.OnActivate;
            @Activate.performed += instance.OnActivate;
            @Activate.canceled += instance.OnActivate;
            @ActivateValue.started += instance.OnActivateValue;
            @ActivateValue.performed += instance.OnActivateValue;
            @ActivateValue.canceled += instance.OnActivateValue;
            @UIPress.started += instance.OnUIPress;
            @UIPress.performed += instance.OnUIPress;
            @UIPress.canceled += instance.OnUIPress;
            @UIPressValue.started += instance.OnUIPressValue;
            @UIPressValue.performed += instance.OnUIPressValue;
            @UIPressValue.canceled += instance.OnUIPressValue;
            @UIScroll.started += instance.OnUIScroll;
            @UIScroll.performed += instance.OnUIScroll;
            @UIScroll.canceled += instance.OnUIScroll;
        }

        private void UnregisterCallbacks(IXRIRightInteractionActions instance)
        {
            @Select.started -= instance.OnSelect;
            @Select.performed -= instance.OnSelect;
            @Select.canceled -= instance.OnSelect;
            @SelectValue.started -= instance.OnSelectValue;
            @SelectValue.performed -= instance.OnSelectValue;
            @SelectValue.canceled -= instance.OnSelectValue;
            @Activate.started -= instance.OnActivate;
            @Activate.performed -= instance.OnActivate;
            @Activate.canceled -= instance.OnActivate;
            @ActivateValue.started -= instance.OnActivateValue;
            @ActivateValue.performed -= instance.OnActivateValue;
            @ActivateValue.canceled -= instance.OnActivateValue;
            @UIPress.started -= instance.OnUIPress;
            @UIPress.performed -= instance.OnUIPress;
            @UIPress.canceled -= instance.OnUIPress;
            @UIPressValue.started -= instance.OnUIPressValue;
            @UIPressValue.performed -= instance.OnUIPressValue;
            @UIPressValue.canceled -= instance.OnUIPressValue;
            @UIScroll.started -= instance.OnUIScroll;
            @UIScroll.performed -= instance.OnUIScroll;
            @UIScroll.canceled -= instance.OnUIScroll;
        }

        public void RemoveCallbacks(IXRIRightInteractionActions instance)
        {
            if (m_Wrapper.m_XRIRightInteractionActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IXRIRightInteractionActions instance)
        {
            foreach (var item in m_Wrapper.m_XRIRightInteractionActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_XRIRightInteractionActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public XRIRightInteractionActions @XRIRightInteraction => new XRIRightInteractionActions(this);

    // XRI Head
    private readonly InputActionMap m_XRIHead;
    private List<IXRIHeadActions> m_XRIHeadActionsCallbackInterfaces = new List<IXRIHeadActions>();
    private readonly InputAction m_XRIHead_Position;
    private readonly InputAction m_XRIHead_Rotation;
    private readonly InputAction m_XRIHead_IsTracked;
    private readonly InputAction m_XRIHead_TrackingState;
    public struct XRIHeadActions
    {
        private @UserInputActionAsset m_Wrapper;
        public XRIHeadActions(@UserInputActionAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @Position => m_Wrapper.m_XRIHead_Position;
        public InputAction @Rotation => m_Wrapper.m_XRIHead_Rotation;
        public InputAction @IsTracked => m_Wrapper.m_XRIHead_IsTracked;
        public InputAction @TrackingState => m_Wrapper.m_XRIHead_TrackingState;
        public InputActionMap Get() { return m_Wrapper.m_XRIHead; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(XRIHeadActions set) { return set.Get(); }
        public void AddCallbacks(IXRIHeadActions instance)
        {
            if (instance == null || m_Wrapper.m_XRIHeadActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_XRIHeadActionsCallbackInterfaces.Add(instance);
            @Position.started += instance.OnPosition;
            @Position.performed += instance.OnPosition;
            @Position.canceled += instance.OnPosition;
            @Rotation.started += instance.OnRotation;
            @Rotation.performed += instance.OnRotation;
            @Rotation.canceled += instance.OnRotation;
            @IsTracked.started += instance.OnIsTracked;
            @IsTracked.performed += instance.OnIsTracked;
            @IsTracked.canceled += instance.OnIsTracked;
            @TrackingState.started += instance.OnTrackingState;
            @TrackingState.performed += instance.OnTrackingState;
            @TrackingState.canceled += instance.OnTrackingState;
        }

        private void UnregisterCallbacks(IXRIHeadActions instance)
        {
            @Position.started -= instance.OnPosition;
            @Position.performed -= instance.OnPosition;
            @Position.canceled -= instance.OnPosition;
            @Rotation.started -= instance.OnRotation;
            @Rotation.performed -= instance.OnRotation;
            @Rotation.canceled -= instance.OnRotation;
            @IsTracked.started -= instance.OnIsTracked;
            @IsTracked.performed -= instance.OnIsTracked;
            @IsTracked.canceled -= instance.OnIsTracked;
            @TrackingState.started -= instance.OnTrackingState;
            @TrackingState.performed -= instance.OnTrackingState;
            @TrackingState.canceled -= instance.OnTrackingState;
        }

        public void RemoveCallbacks(IXRIHeadActions instance)
        {
            if (m_Wrapper.m_XRIHeadActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IXRIHeadActions instance)
        {
            foreach (var item in m_Wrapper.m_XRIHeadActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_XRIHeadActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public XRIHeadActions @XRIHead => new XRIHeadActions(this);

    // Ghost
    private readonly InputActionMap m_Ghost;
    private List<IGhostActions> m_GhostActionsCallbackInterfaces = new List<IGhostActions>();
    private readonly InputAction m_Ghost_Move;
    private readonly InputAction m_Ghost_Look;
    private readonly InputAction m_Ghost_LeftClick;
    private readonly InputAction m_Ghost_RightClick;
    private readonly InputAction m_Ghost_OpenClose;
    private readonly InputAction m_Ghost_SetHeight;
    private readonly InputAction m_Ghost_Rotate;
    public struct GhostActions
    {
        private @UserInputActionAsset m_Wrapper;
        public GhostActions(@UserInputActionAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Ghost_Move;
        public InputAction @Look => m_Wrapper.m_Ghost_Look;
        public InputAction @LeftClick => m_Wrapper.m_Ghost_LeftClick;
        public InputAction @RightClick => m_Wrapper.m_Ghost_RightClick;
        public InputAction @OpenClose => m_Wrapper.m_Ghost_OpenClose;
        public InputAction @SetHeight => m_Wrapper.m_Ghost_SetHeight;
        public InputAction @Rotate => m_Wrapper.m_Ghost_Rotate;
        public InputActionMap Get() { return m_Wrapper.m_Ghost; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GhostActions set) { return set.Get(); }
        public void AddCallbacks(IGhostActions instance)
        {
            if (instance == null || m_Wrapper.m_GhostActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GhostActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @LeftClick.started += instance.OnLeftClick;
            @LeftClick.performed += instance.OnLeftClick;
            @LeftClick.canceled += instance.OnLeftClick;
            @RightClick.started += instance.OnRightClick;
            @RightClick.performed += instance.OnRightClick;
            @RightClick.canceled += instance.OnRightClick;
            @OpenClose.started += instance.OnOpenClose;
            @OpenClose.performed += instance.OnOpenClose;
            @OpenClose.canceled += instance.OnOpenClose;
            @SetHeight.started += instance.OnSetHeight;
            @SetHeight.performed += instance.OnSetHeight;
            @SetHeight.canceled += instance.OnSetHeight;
            @Rotate.started += instance.OnRotate;
            @Rotate.performed += instance.OnRotate;
            @Rotate.canceled += instance.OnRotate;
        }

        private void UnregisterCallbacks(IGhostActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @LeftClick.started -= instance.OnLeftClick;
            @LeftClick.performed -= instance.OnLeftClick;
            @LeftClick.canceled -= instance.OnLeftClick;
            @RightClick.started -= instance.OnRightClick;
            @RightClick.performed -= instance.OnRightClick;
            @RightClick.canceled -= instance.OnRightClick;
            @OpenClose.started -= instance.OnOpenClose;
            @OpenClose.performed -= instance.OnOpenClose;
            @OpenClose.canceled -= instance.OnOpenClose;
            @SetHeight.started -= instance.OnSetHeight;
            @SetHeight.performed -= instance.OnSetHeight;
            @SetHeight.canceled -= instance.OnSetHeight;
            @Rotate.started -= instance.OnRotate;
            @Rotate.performed -= instance.OnRotate;
            @Rotate.canceled -= instance.OnRotate;
        }

        public void RemoveCallbacks(IGhostActions instance)
        {
            if (m_Wrapper.m_GhostActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGhostActions instance)
        {
            foreach (var item in m_Wrapper.m_GhostActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GhostActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GhostActions @Ghost => new GhostActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_EnableDisable;
    public struct UIActions
    {
        private @UserInputActionAsset m_Wrapper;
        public UIActions(@UserInputActionAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @EnableDisable => m_Wrapper.m_UI_EnableDisable;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @EnableDisable.started += instance.OnEnableDisable;
            @EnableDisable.performed += instance.OnEnableDisable;
            @EnableDisable.canceled += instance.OnEnableDisable;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @EnableDisable.started -= instance.OnEnableDisable;
            @EnableDisable.performed -= instance.OnEnableDisable;
            @EnableDisable.canceled -= instance.OnEnableDisable;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IXRILeftActions
    {
        void OnPosition(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnIsTracked(InputAction.CallbackContext context);
        void OnTrackingState(InputAction.CallbackContext context);
        void OnHapticDevice(InputAction.CallbackContext context);
        void OnThumbstick(InputAction.CallbackContext context);
    }
    public interface IXRIRightActions
    {
        void OnPosition(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnIsTracked(InputAction.CallbackContext context);
        void OnTrackingState(InputAction.CallbackContext context);
        void OnHapticDevice(InputAction.CallbackContext context);
        void OnThumbstick(InputAction.CallbackContext context);
    }
    public interface IXRILeftInteractionActions
    {
        void OnSelect(InputAction.CallbackContext context);
        void OnSelectValue(InputAction.CallbackContext context);
        void OnActivate(InputAction.CallbackContext context);
        void OnActivateValue(InputAction.CallbackContext context);
        void OnUIPress(InputAction.CallbackContext context);
        void OnUIPressValue(InputAction.CallbackContext context);
        void OnUIScroll(InputAction.CallbackContext context);
    }
    public interface IXRIRightInteractionActions
    {
        void OnSelect(InputAction.CallbackContext context);
        void OnSelectValue(InputAction.CallbackContext context);
        void OnActivate(InputAction.CallbackContext context);
        void OnActivateValue(InputAction.CallbackContext context);
        void OnUIPress(InputAction.CallbackContext context);
        void OnUIPressValue(InputAction.CallbackContext context);
        void OnUIScroll(InputAction.CallbackContext context);
    }
    public interface IXRIHeadActions
    {
        void OnPosition(InputAction.CallbackContext context);
        void OnRotation(InputAction.CallbackContext context);
        void OnIsTracked(InputAction.CallbackContext context);
        void OnTrackingState(InputAction.CallbackContext context);
    }
    public interface IGhostActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnLeftClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnOpenClose(InputAction.CallbackContext context);
        void OnSetHeight(InputAction.CallbackContext context);
        void OnRotate(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnEnableDisable(InputAction.CallbackContext context);
    }
}
